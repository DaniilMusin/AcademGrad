'use client';

import { useState } from 'react';
import Link from 'next/link';

interface Task {
  id: string;
  topicId: string;
  subtopicId: string;
  title: string;
  statement: string;
  solution: string;
  difficulty: number;
  points: number;
  tags: string[];
  createdAt: string;
  author: string;
}

// –ú–æ–∫–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
const mockTasks: Task[] = [
  {
    id: '1',
    topicId: '3',
    subtopicId: '3-1',
    title: '–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞',
    statement: '–í —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–µ ABC –∏–∑–≤–µ—Å—Ç–Ω–æ, —á—Ç–æ $AB = 6$, $BC = 8$, —É–≥–æ–ª $\\angle ABC = 90¬∞$. –ù–∞–π–¥–∏—Ç–µ –ø–ª–æ—â–∞–¥—å —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.',
    solution: '–î–∞–Ω–æ: –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω—ã–π —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫ ABC, $AB = 6$, $BC = 8$, $\\angle ABC = 90¬∞$\n\n–†–µ—à–µ–Ω–∏–µ:\n–ü–ª–æ—â–∞–¥—å –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–æ–≥–æ —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ:\n$$S = \\frac{1}{2} \\cdot a \\cdot b$$\n–≥–¥–µ $a$ –∏ $b$ ‚Äî –∫–∞—Ç–µ—Ç—ã —Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫–∞.\n\n$$S = \\frac{1}{2} \\cdot AB \\cdot BC = \\frac{1}{2} \\cdot 6 \\cdot 8 = 24$$\n\n–û—Ç–≤–µ—Ç: $S = 24$',
    difficulty: 2,
    points: 1,
    tags: ['–ø–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è', '—Ç—Ä–µ—É–≥–æ–ª—å–Ω–∏–∫', '–ø–ª–æ—â–∞–¥—å'],
    createdAt: '2024-01-15',
    author: 'Admin'
  },
  {
    id: '2',
    topicId: '13',
    subtopicId: '13-1',
    title: '–ü–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ',
    statement: '–†–µ—à–∏—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ $2^{x+1} = 8^{x-2}$',
    solution: '–î–∞–Ω–æ: $2^{x+1} = 8^{x-2}$\n\n–†–µ—à–µ–Ω–∏–µ:\n–ü—Ä–∏–≤–µ–¥–µ–º –∫ –æ–¥–Ω–æ–º—É –æ—Å–Ω–æ–≤–∞–Ω–∏—é. –ü–æ—Å–∫–æ–ª—å–∫—É $8 = 2^3$:\n$$2^{x+1} = (2^3)^{x-2}$$\n$$2^{x+1} = 2^{3(x-2)}$$\n$$2^{x+1} = 2^{3x-6}$$\n\n–ü–æ—Å–∫–æ–ª—å–∫—É –æ—Å–Ω–æ–≤–∞–Ω–∏—è —Ä–∞–≤–Ω—ã:\n$$x+1 = 3x-6$$\n$$1+6 = 3x-x$$\n$$7 = 2x$$\n$$x = 3.5$$\n\n–û—Ç–≤–µ—Ç: $x = 3.5$',
    difficulty: 4,
    points: 2,
    tags: ['—É—Ä–∞–≤–Ω–µ–Ω–∏—è', '–ø–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã–µ', '—Å—Ç–µ–ø–µ–Ω–∏'],
    createdAt: '2024-01-14',
    author: 'Admin'
  },
  {
    id: '3',
    topicId: '1',
    subtopicId: '1-4',
    title: '–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º–∞',
    statement: '–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º–∞ —Ä–∞–≤–Ω–∞ 24 —Å–º¬≤. –û–¥–Ω–∞ –∏–∑ –µ–≥–æ —Å—Ç–æ—Ä–æ–Ω —Ä–∞–≤–Ω–∞ 6 —Å–º. –ù–∞–π–¥–∏—Ç–µ –≤—ã—Å–æ—Ç—É, –ø—Ä–æ–≤–µ–¥–µ–Ω–Ω—É—é –∫ —ç—Ç–æ–π —Å—Ç–æ—Ä–æ–Ω–µ.',
    solution: '–î–∞–Ω–æ: –ø–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º–∞ $S = 24$ —Å–º¬≤, —Å—Ç–æ—Ä–æ–Ω–∞ $a = 6$ —Å–º\n\n–ù–∞–π—Ç–∏: –≤—ã—Å–æ—Ç—É $h$\n\n–†–µ—à–µ–Ω–∏–µ:\n–ü–ª–æ—â–∞–¥—å –ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º–∞ –≤—ã—á–∏—Å–ª—è–µ—Ç—Å—è –ø–æ —Ñ–æ—Ä–º—É–ª–µ:\n$$S = a \\cdot h$$\n–≥–¥–µ $a$ ‚Äî –æ—Å–Ω–æ–≤–∞–Ω–∏–µ, $h$ ‚Äî –≤—ã—Å–æ—Ç–∞.\n\n–í—ã—Ä–∞–∑–∏–º –≤—ã—Å–æ—Ç—É:\n$$h = \\frac{S}{a} = \\frac{24}{6} = 4$$\n\n–û—Ç–≤–µ—Ç: $h = 4$ —Å–º',
    difficulty: 1,
    points: 1,
    tags: ['–ø–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è', '–ø–∞—Ä–∞–ª–ª–µ–ª–æ–≥—Ä–∞–º–º', '–ø–ª–æ—â–∞–¥—å', '–≤—ã—Å–æ—Ç–∞'],
    createdAt: '2024-01-13',
    author: 'Admin'
  }
];

const topicNames: Record<string, string> = {
  '1': '–ü—Ä–æ—Å—Ç–µ–π—à–∏–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏',
  '2': '–ß—Ç–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–æ–≤ –∏ –¥–∏–∞–≥—Ä–∞–º–º',
  '3': '–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è',
  '4': '–¢–µ–æ—Ä–∏—è –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç–µ–π',
  '5': '–ü—Ä–æ—Å—Ç–µ–π—à–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è',
  '6': '–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è (—É–≥–ª—ã)',
  '7': '–ü—Ä–æ–∏–∑–≤–æ–¥–Ω–∞—è',
  '8': '–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è',
  '9': '–í—ã—á–∏—Å–ª–µ–Ω–∏—è',
  '10': '–ü—Ä–∏–∫–ª–∞–¥–Ω—ã–µ –∑–∞–¥–∞—á–∏',
  '11': '–ì—Ä–∞—Ñ–∏–∫–∏ —Ñ—É–Ω–∫—Ü–∏–π',
  '11a': '–¢–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–¥–∞—á–∏',
  '12': '–ò—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–π',
  '13': '–£—Ä–∞–≤–Ω–µ–Ω–∏—è (—Å–ª–æ–∂–Ω—ã–µ)',
  '14': '–°—Ç–µ—Ä–µ–æ–º–µ—Ç—Ä–∏—è (—É–≥–ª—ã –∏ —Ä–∞—Å—Å—Ç–æ—è–Ω–∏—è)',
  '15': '–ù–µ—Ä–∞–≤–µ–Ω—Å—Ç–≤–∞',
  '16': '–ü–ª–∞–Ω–∏–º–µ—Ç—Ä–∏—è (–¥–æ–∫–∞–∑–∞—Ç–µ–ª—å—Å—Ç–≤–∞)',
  '17': '–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
  '18': '–ó–∞–¥–∞—á–∏ —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–º',
  '19': '–ß–∏—Å–ª–∞ –∏ –∏—Ö —Å–≤–æ–π—Å—Ç–≤–∞'
};

export default function TasksAdmin() {
  const [tasks, setTasks] = useState<Task[]>(mockTasks);
  const [filterTopic, setFilterTopic] = useState('');
  const [filterDifficulty, setFilterDifficulty] = useState('');
  const [searchQuery, setSearchQuery] = useState('');
  const [selectedTask, setSelectedTask] = useState<Task | null>(null);

  const filteredTasks = tasks.filter(task => {
    const matchesTopic = !filterTopic || task.topicId === filterTopic;
    const matchesDifficulty = !filterDifficulty || task.difficulty.toString() === filterDifficulty;
    const matchesSearch = !searchQuery || 
      task.title.toLowerCase().includes(searchQuery.toLowerCase()) ||
      task.tags.some(tag => tag.toLowerCase().includes(searchQuery.toLowerCase()));
    
    return matchesTopic && matchesDifficulty && matchesSearch;
  });

  const deleteTask = (taskId: string) => {
    if (confirm('–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å —ç—Ç–æ –∑–∞–¥–∞–Ω–∏–µ?')) {
      setTasks(prev => prev.filter(t => t.id !== taskId));
      if (selectedTask?.id === taskId) {
        setSelectedTask(null);
      }
    }
  };

  const paperGrainCSS = `
    background-image: url("data:image/svg+xml,%3Csvg viewBox='0 0 100 100' xmlns='http://www.w3.org/2000/svg'%3E%3Cfilter id='noiseFilter'%3E%3CfeTurbulence type='fractalNoise' baseFrequency='0.85' numOctaves='4'/%3E%3CfeColorMatrix in='turbulence' values='0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 1 0'/%3E%3C/filter%3E%3Crect width='100%25' height='100%25' filter='url(%23noiseFilter)' opacity='0.04'/%3E%3C/svg%3E");
  `;

  return (
    <div style={{ 
      fontFamily: 'system-ui, sans-serif',
      margin: 0,
      padding: 0,
      backgroundColor: '#FAFAF7',
      minHeight: '100vh',
      background: `#FAFAF7 ${paperGrainCSS}`
    }}>
      {/* Header */}
      <header style={{
        background: 'rgba(255, 255, 255, 0.8)',
        backdropFilter: 'blur(20px)',
        WebkitBackdropFilter: 'blur(20px)',
        borderBottom: '1px solid rgba(255, 255, 255, 0.2)',
        position: 'sticky',
        top: 0,
        zIndex: 100
      }}>
        <div style={{
          maxWidth: '1400px',
          margin: '0 auto',
          padding: '0 32px',
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          height: '80px'
        }}>
          <div style={{ display: 'flex', alignItems: 'center', gap: '12px' }}>
            <Link href="/" style={{ textDecoration: 'none', display: 'flex', alignItems: 'center', gap: '12px' }}>
              <div style={{
                width: '48px',
                height: '48px',
                background: 'linear-gradient(135deg, #4F7FE6 0%, #3F6FD6 100%)',
                borderRadius: '12px',
                display: 'flex',
                alignItems: 'center',
                justifyContent: 'center',
                position: 'relative',
                boxShadow: 'inset 0 2px 4px rgba(255,255,255,0.3)'
              }}>
                <span style={{ color: 'white', fontSize: '20px' }}>üìö</span>
              </div>
              <div>
                <h1 style={{ 
                  margin: 0, 
                  fontSize: '24px', 
                  fontWeight: '700', 
                  color: '#222A35',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∑–∞–¥–∞–Ω–∏—è–º–∏
                </h1>
                <p style={{ 
                  margin: 0, 
                  fontSize: '12px', 
                  color: '#6b7280',
                  fontFamily: 'Comic Neue, cursive'
                }}>
                  –≤—Å–µ–≥–æ –∑–∞–¥–∞–Ω–∏–π: {tasks.length}
                </p>
              </div>
            </Link>
          </div>
          
          <div style={{ display: 'flex', gap: '16px', alignItems: 'center' }}>
            <Link href="/admin/task-constructor" style={{ 
              backgroundColor: '#4F7FE6',
              color: 'white',
              textDecoration: 'none',
              fontWeight: '600',
              padding: '12px 20px',
              borderRadius: '12px',
              transition: 'all 0.3s ease'
            }}>
              ‚ûï –°–æ–∑–¥–∞—Ç—å –∑–∞–¥–∞–Ω–∏–µ
            </Link>
            <Link href="/" style={{ 
              color: '#6b7280',
              textDecoration: 'none',
              fontWeight: '600',
              padding: '8px 16px',
              borderRadius: '20px',
              transition: 'all 0.3s ease'
            }}>
              ‚Üê –ù–∞ –≥–ª–∞–≤–Ω—É—é
            </Link>
          </div>
        </div>
      </header>

      {/* Main Content */}
      <div style={{ maxWidth: '1400px', margin: '0 auto', padding: '40px 32px' }}>
        <div style={{ display: 'grid', gridTemplateColumns: selectedTask ? '1fr 1fr' : '1fr', gap: '32px' }}>
          
          {/* Tasks List */}
          <div style={{
            backgroundColor: 'white',
            borderRadius: '20px',
            boxShadow: '0 8px 32px rgba(0,0,0,0.06)',
            border: '2px solid rgba(79, 127, 230, 0.1)',
            padding: '32px'
          }}>
            {/* Filters */}
            <div style={{ marginBottom: '32px' }}>
              <h2 style={{
                fontSize: '24px',
                fontWeight: '700',
                color: '#222A35',
                marginBottom: '24px',
                fontFamily: 'Inter, system-ui, sans-serif'
              }}>
                –í—Å–µ –∑–∞–¥–∞–Ω–∏—è ({filteredTasks.length})
              </h2>

              <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr 1fr', gap: '16px', marginBottom: '16px' }}>
                <select
                  value={filterTopic}
                  onChange={(e) => setFilterTopic(e.target.value)}
                  style={{
                    padding: '12px 16px',
                    border: '2px solid rgba(79, 127, 230, 0.2)',
                    borderRadius: '12px',
                    fontSize: '14px',
                    backgroundColor: 'white',
                    fontFamily: 'Inter, system-ui, sans-serif'
                  }}
                >
                  <option value="">–í—Å–µ —Ç–µ–º—ã</option>
                  {Object.entries(topicNames).map(([id, name]) => (
                    <option key={id} value={id}>‚Ññ{id}. {name}</option>
                  ))}
                </select>

                <select
                  value={filterDifficulty}
                  onChange={(e) => setFilterDifficulty(e.target.value)}
                  style={{
                    padding: '12px 16px',
                    border: '2px solid rgba(79, 127, 230, 0.2)',
                    borderRadius: '12px',
                    fontSize: '14px',
                    backgroundColor: 'white',
                    fontFamily: 'Inter, system-ui, sans-serif'
                  }}
                >
                  <option value="">–õ—é–±–∞—è —Å–ª–æ–∂–Ω–æ—Å—Ç—å</option>
                  <option value="1">‚òÖ‚òÜ‚òÜ‚òÜ‚òÜ –õ–µ–≥–∫–∞—è</option>
                  <option value="2">‚òÖ‚òÖ‚òÜ‚òÜ‚òÜ –°—Ä–µ–¥–Ω—è—è</option>
                  <option value="3">‚òÖ‚òÖ‚òÖ‚òÜ‚òÜ –í—ã—à–µ —Å—Ä–µ–¥–Ω–µ–π</option>
                  <option value="4">‚òÖ‚òÖ‚òÖ‚òÖ‚òÜ –°–ª–æ–∂–Ω–∞—è</option>
                  <option value="5">‚òÖ‚òÖ‚òÖ‚òÖ‚òÖ –û—á–µ–Ω—å —Å–ª–æ–∂–Ω–∞—è</option>
                </select>

                <input
                  type="text"
                  placeholder="–ü–æ–∏—Å–∫ –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é –∏–ª–∏ —Ç–µ–≥–∞–º..."
                  value={searchQuery}
                  onChange={(e) => setSearchQuery(e.target.value)}
                  style={{
                    padding: '12px 16px',
                    border: '2px solid rgba(79, 127, 230, 0.2)',
                    borderRadius: '12px',
                    fontSize: '14px',
                    backgroundColor: 'white',
                    fontFamily: 'Inter, system-ui, sans-serif'
                  }}
                />
              </div>
            </div>

            {/* Tasks List */}
            <div style={{ maxHeight: selectedTask ? '600px' : 'none', overflowY: 'auto' }}>
              {filteredTasks.length === 0 ? (
                <div style={{
                  textAlign: 'center',
                  padding: '60px 20px',
                  color: '#6b7280'
                }}>
                  <span style={{ fontSize: '48px', marginBottom: '16px', display: 'block' }}>üìù</span>
                  <p style={{ fontSize: '18px', fontWeight: '600', marginBottom: '8px' }}>–ó–∞–¥–∞–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</p>
                  <p style={{ fontSize: '14px' }}>–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ —Å–æ–∑–¥–∞—Ç—å –Ω–æ–≤–æ–µ –∑–∞–¥–∞–Ω–∏–µ</p>
                </div>
              ) : (
                filteredTasks.map(task => (
                  <div
                    key={task.id}
                    onClick={() => setSelectedTask(task)}
                    style={{
                      padding: '20px',
                      borderRadius: '16px',
                      border: selectedTask?.id === task.id ? '2px solid #4F7FE6' : '1px solid rgba(79, 127, 230, 0.1)',
                      backgroundColor: selectedTask?.id === task.id ? 'rgba(79, 127, 230, 0.05)' : 'white',
                      marginBottom: '16px',
                      cursor: 'pointer',
                      transition: 'all 0.2s ease'
                    }}
                    onMouseEnter={(e) => {
                      if (selectedTask?.id !== task.id) {
                        e.currentTarget.style.backgroundColor = '#f8fafc';
                      }
                    }}
                    onMouseLeave={(e) => {
                      if (selectedTask?.id !== task.id) {
                        e.currentTarget.style.backgroundColor = 'white';
                      }
                    }}
                  >
                    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '12px' }}>
                      <h3 style={{
                        fontSize: '16px',
                        fontWeight: '600',
                        color: '#222A35',
                        margin: 0,
                        fontFamily: 'Inter, system-ui, sans-serif'
                      }}>
                        {task.title}
                      </h3>
                      <div style={{ display: 'flex', gap: '8px', alignItems: 'center' }}>
                        <span style={{
                          backgroundColor: 'rgba(79, 127, 230, 0.1)',
                          color: '#4F7FE6',
                          padding: '4px 8px',
                          borderRadius: '8px',
                          fontSize: '10px',
                          fontWeight: '600',
                          fontFamily: 'Inter, system-ui, sans-serif'
                        }}>
                          ‚Ññ{task.topicId}
                        </span>
                        <button
                          onClick={(e) => {
                            e.stopPropagation();
                            deleteTask(task.id);
                          }}
                          style={{
                            backgroundColor: 'rgba(239, 68, 68, 0.1)',
                            color: '#DC2626',
                            border: 'none',
                            borderRadius: '6px',
                            padding: '4px 8px',
                            fontSize: '12px',
                            cursor: 'pointer',
                            fontWeight: '600'
                          }}
                        >
                          üóëÔ∏è
                        </button>
                      </div>
                    </div>

                    <div style={{ display: 'flex', gap: '8px', alignItems: 'center', marginBottom: '12px' }}>
                      <span style={{
                        fontSize: '12px',
                        color: '#6b7280',
                        fontFamily: 'Comic Neue, cursive'
                      }}>
                        {'‚òÖ'.repeat(task.difficulty)}{'‚òÜ'.repeat(5 - task.difficulty)}
                      </span>
                      <span style={{
                        backgroundColor: 'rgba(255, 181, 71, 0.2)',
                        color: '#B45309',
                        padding: '2px 8px',
                        borderRadius: '8px',
                        fontSize: '10px',
                        fontWeight: '600',
                        fontFamily: 'Inter, system-ui, sans-serif'
                      }}>
                        {task.points} –±–∞–ª–ª{task.points > 1 ? (task.points === 2 || task.points === 3 || task.points === 4 ? '–∞' : '–æ–≤') : ''}
                      </span>
                      <span style={{
                        fontSize: '12px',
                        color: '#6b7280',
                        fontFamily: 'Inter, system-ui, sans-serif'
                      }}>
                        {task.createdAt}
                      </span>
                    </div>

                    <div style={{ display: 'flex', flexWrap: 'wrap', gap: '6px' }}>
                      {task.tags.slice(0, 3).map(tag => (
                        <span
                          key={tag}
                          style={{
                            backgroundColor: 'rgba(79, 127, 230, 0.1)',
                            color: '#4F7FE6',
                            padding: '4px 8px',
                            borderRadius: '12px',
                            fontSize: '11px',
                            fontWeight: '500',
                            fontFamily: 'Inter, system-ui, sans-serif'
                          }}
                        >
                          {tag}
                        </span>
                      ))}
                      {task.tags.length > 3 && (
                        <span style={{
                          fontSize: '11px',
                          color: '#6b7280',
                          fontFamily: 'Inter, system-ui, sans-serif'
                        }}>
                          +{task.tags.length - 3}
                        </span>
                      )}
                    </div>
                  </div>
                ))
              )}
            </div>
          </div>

          {/* Task Detail */}
          {selectedTask && (
            <div style={{
              backgroundColor: 'white',
              borderRadius: '20px',
              boxShadow: '0 8px 32px rgba(0,0,0,0.06)',
              border: '2px solid rgba(79, 127, 230, 0.1)',
              padding: '32px',
              maxHeight: '80vh',
              overflowY: 'auto'
            }}>
              <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-start', marginBottom: '24px' }}>
                <h3 style={{
                  fontSize: '24px',
                  fontWeight: '700',
                  color: '#222A35',
                  margin: 0,
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  {selectedTask.title}
                </h3>
                <button
                  onClick={() => setSelectedTask(null)}
                  style={{
                    backgroundColor: 'transparent',
                    border: 'none',
                    fontSize: '24px',
                    color: '#6b7280',
                    cursor: 'pointer',
                    padding: '4px'
                  }}
                >
                  √ó
                </button>
              </div>

              <div style={{ display: 'flex', gap: '12px', alignItems: 'center', marginBottom: '24px' }}>
                <span style={{
                  backgroundColor: 'rgba(79, 127, 230, 0.1)',
                  color: '#4F7FE6',
                  padding: '6px 12px',
                  borderRadius: '12px',
                  fontSize: '12px',
                  fontWeight: '600',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  ‚Ññ{selectedTask.topicId}. {topicNames[selectedTask.topicId]}
                </span>
                <span style={{
                  backgroundColor: 'rgba(79, 127, 230, 0.1)',
                  color: '#4F7FE6',
                  padding: '6px 12px',
                  borderRadius: '12px',
                  fontSize: '12px',
                  fontWeight: '600',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  {'‚òÖ'.repeat(selectedTask.difficulty)}{'‚òÜ'.repeat(5 - selectedTask.difficulty)}
                </span>
                <span style={{
                  backgroundColor: 'rgba(255, 181, 71, 0.2)',
                  color: '#B45309',
                  padding: '6px 12px',
                  borderRadius: '12px',
                  fontSize: '12px',
                  fontWeight: '600',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  {selectedTask.points} –±–∞–ª–ª{selectedTask.points > 1 ? (selectedTask.points === 2 || selectedTask.points === 3 || selectedTask.points === 4 ? '–∞' : '–æ–≤') : ''}
                </span>
              </div>

              <div style={{
                backgroundColor: '#f8fafc',
                border: '1px solid rgba(79, 127, 230, 0.2)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px'
              }}>
                <h4 style={{
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#222A35',
                  marginBottom: '12px',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  –£—Å–ª–æ–≤–∏–µ:
                </h4>
                <div style={{
                  fontFamily: 'system-ui, sans-serif',
                  fontSize: '16px',
                  lineHeight: '1.6',
                  color: '#374151',
                  whiteSpace: 'pre-wrap'
                }}>
                  {selectedTask.statement}
                </div>
                <p style={{
                  fontSize: '12px',
                  color: '#6b7280',
                  marginTop: '12px',
                  fontStyle: 'italic',
                  fontFamily: 'Comic Neue, cursive'
                }}>
                  üí° LaTeX —Ñ–æ—Ä–º—É–ª—ã –±—É–¥—É—Ç –æ—Ç—Ä–µ–Ω–¥–µ—Ä–µ–Ω—ã –Ω–∞ —Å–∞–π—Ç–µ
                </p>
              </div>

              <div style={{
                backgroundColor: '#f0f9ff',
                border: '1px solid rgba(79, 127, 230, 0.2)',
                borderRadius: '12px',
                padding: '20px',
                marginBottom: '24px'
              }}>
                <h4 style={{
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#222A35',
                  marginBottom: '12px',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  –†–µ—à–µ–Ω–∏–µ:
                </h4>
                <div style={{
                  fontFamily: 'system-ui, sans-serif',
                  fontSize: '16px',
                  lineHeight: '1.6',
                  color: '#374151',
                  whiteSpace: 'pre-wrap'
                }}>
                  {selectedTask.solution}
                </div>
              </div>

              <div style={{ marginBottom: '24px' }}>
                <h4 style={{
                  fontSize: '16px',
                  fontWeight: '600',
                  color: '#222A35',
                  marginBottom: '12px',
                  fontFamily: 'Inter, system-ui, sans-serif'
                }}>
                  –¢–µ–≥–∏:
                </h4>
                <div style={{ display: 'flex', flexWrap: 'wrap', gap: '8px' }}>
                  {selectedTask.tags.map(tag => (
                    <span
                      key={tag}
                      style={{
                        backgroundColor: 'rgba(79, 127, 230, 0.1)',
                        color: '#4F7FE6',
                        padding: '6px 12px',
                        borderRadius: '16px',
                        fontSize: '14px',
                        fontWeight: '500',
                        fontFamily: 'Inter, system-ui, sans-serif'
                      }}
                    >
                      {tag}
                    </span>
                  ))}
                </div>
              </div>

              <div style={{
                padding: '16px',
                backgroundColor: '#f9fafb',
                borderRadius: '12px',
                border: '1px solid #e5e7eb'
              }}>
                <div style={{ display: 'flex', justifyContent: 'space-between', fontSize: '14px', color: '#6b7280' }}>
                  <span>–°–æ–∑–¥–∞–Ω–æ: {selectedTask.createdAt}</span>
                  <span>–ê–≤—Ç–æ—Ä: {selectedTask.author}</span>
                </div>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
}